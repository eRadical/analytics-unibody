user  {{ unibody_nginx_user }};
worker_processes  auto;
worker_rlimit_nofile 50000;

error_log  /var/log/nginx/error.log;
pid /run/nginx.pid;

{% if unibody_geo_service %}
load_module /usr/lib64/nginx/modules/ngx_http_geoip2_module.so;
{% endif %}

events {
  use                 epoll;
  worker_connections  8192;
  multi_accept        on;
}

http {
    include       mime.types;
    default_type  text/plain;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

{% for log_formats in unibody_analytics_nginx_log_formats %}
    log_format {{ log_formats['name'] }} '{{ log_formats['format'] }}';
{% endfor %}

    access_log  /var/log/nginx/access.log  main;

    server_tokens off;

{% if unibody_geo_service %}
    # Load Balancer's internal IPs
    set_real_ip_from 10.0.0.0/8;

    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;

    geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
        $geoip2_city_name city names en;
        $geoip2_continent_code default=NA continent code;
        $geoip2_continent_name continent names en;
        $geoip2_country_code default=NA country iso_code;
        $geoip2_country_name country names en;
        $geoip2_lat location latitude;
        $geoip2_long location longitude;
        $geoip2_metro_code location metro_code;
        $geoip2_time_zone location time_zone;
        $geoip2_state_name subdivisions names names en;
    }
{% endif %}

    map $remote_addr $anonymized_ip_1 {
        default 0.0;
        "~\d+\.\d+\.(?P<ip>(\d+)\.(\d+))"                                 $ip;
        "~[^:]+\:[^:]+\:(?P<ip>[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+)" $ip;
    }
    map $remote_addr $anonymized_ip_2 {
        default  "A.B.";
        "~\d+\.\d+\.\d+\.\d+"                                     "X.Y.";
        "~[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+\:[^:]+" "X:Y:";
    }
    map $anonymized_ip_2$anonymized_ip_1 $anonymized_ip {
        default       0.0.0.0;
        "~(?P<ip>.*)" $ip;
    }

    aio                on;
    sendfile           off;
    tcp_nopush         off;
    keepalive_timeout  65;

    large_client_header_buffers 4 12k;

    server {
{% if unibody_analytics_listen_80 %}
        listen 80;
{% endif %}
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name  {{ unibody_analytics_url | join(' ') }};

        ssl_session_timeout 1d;
        ssl_session_cache   shared:SSL:50m;
        ssl_session_tickets off;
        ssl_certificate     "{{ unibody_analytics_ssl_certificate }}";
        ssl_certificate_key "{{ unibody_analytics_ssl_certificate_key }}";
        ssl_protocols       TLSv1.1 TLSv1.2;
        ssl_ciphers         ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
        ssl_prefer_server_ciphers on;

{% for tracker in unibody_analytics_trackers %}
        ### Tracker Name: {{ tracker['name'] }}
        location {{ tracker['location_url'] }} {
            access_log  {{ tracker['logfile'] }} {{ tracker['format_name'] }};

{% if tracker['empty_gif'] %}
            empty_gif;
{% endif %}
{% if tracker['return_204'] %}
            return 204;
{% endif %}

        }
{% endfor %}

{% if unibody_geo_service %}
        location {{ unibody_geo_location_url }} {
            add_header Access-Control-Allow-Origin *;
            root   /etc/nginx/geo;
            index  find-me.json;
            ssi on;
            ssi_silent_errors on;
            ssi_types application/json;
        }
{% endif %}

        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}
